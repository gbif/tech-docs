openapi: 3.0.1
info:
  x-logo:
    url: "https://www.gbif.org/img/logo/GBIF-2015-full-stacked.png"
  title: GBIF
  description: |
    The GBIF API is a RESTful JSON based API. The base URL for v1 you should use is: http://api.gbif.org/v1/

    The API should be considered stable, as should this accompanying documentation. It is also available with HTTPS. Please report any issues you find with either the API itself or the documentation using the "feedback" button on the top right.
  termsOfService: 'https://www.gbif.org/terms'
  contact:
    name: API Support
    email: informatics@gbif.org
    url: https://github.org/gbif/portal-feedback/issues
  version: "1.0"
servers:
- url: https://api.gbif.org
  description: Production server (uses live data)
- url: https://api.gbif-uat.org
  description: Sandbox server (uses test data)
tags:
  - name: Introduction
    description: |
      The API is split into logical sections to ease understanding
      - Registry: Provides means to create, edit, update and search for information about the datasets, organizations (e.g. data publishers), networks and the means to access them (technical endpoints). The registered content controls what is crawled and indexed in the GBIF data portal, but as a shared API may also be used for other initiatives
      - Species: Provides services to discover and access information about species and higher taxa, and utility services for interpreting names and looking up the identifiers and complete scientific names used for species in the GBIF portal.
      - Occurrence: Provides access to occurrence information crawled and indexed by GBIF and search services to do real time paged search and asynchronous download services to do large batch downloads.
      - Maps: Provides simple services to show the maps of GBIF mobilized content on other sites.
      - News: Provides services to stream useful information such as papers published using GBIF mobilized content for various themes.

      # Communication
      You can sign up to the GBIF API users mailing list to post your questions, and to keep informed about the API. We will announce new versions, and scheduled maintenance downtimes before they happen.

      We welcome any example uses of the API to guest feature on the GBIF data blog.

      Feedback from developers on the API can be sent to informatics@gbif.org

      # Range queries
      
      Some search parameters support range queries, for example the year parameter in the occurrence search. In general ranges are given as a single parameter value by concatenating a lower and an upper value with a comma. For example: `http://api.gbif.org/v1/occurrence/search?year=1800,1899`

      # Authentication
      POST, PUT, and DELETE requests require authentication. The GBIF API uses HTTP Basic Authentication with any GBIF user account that you have created before.

      For example to issue a new download programmatically using curl with a query filter as JSON in a file called filter.json: 
      ```
      $ curl -i --user yourUserName:yourPassword -H "Content-Type: application/json" -H "Accept: application/json" -X POST -d @filter.json http://api.gbif.org/v1/occurrence/download/request
      ```

      # Roadmap to v2
      The GBIF API is currently at v1 which means:

      The API is stable â€“ this means we won't rename or remove any REST resources or response properties to ensure backwards compatibility, but we might add new resources to the API. Any additions will be announced via the API mailing list.
      Any bug fixes or additions will result in minor version changes which are not reflected in the API URL, only in the documentation and our Java client code.
      If and when the need for breaking changes arises we will document our intent here and on the mailing list, and give considerable warning before moving to a future v2.
      The base URL includes the version as appropriate.
      Feedback from developers on the API can be sent to informatics@gbif.org
  - name: Dataset
    description: |
      The dataset API provides CRUD and discovery services for datasets. Its most prominent use on the GBIF portal is to drive the dataset search and dataset pages.
      Please note deletion of datasets is logical, meaning dataset entries remain registered forever and only get a deleted timestamp. On the other hand, deletion of a dataset's contacts, endpoints, identifiers, tags, machine tags, comments, and metadata descriptions is physical, meaning the entries are permanently removed.
  - name: Maps
    description: |
      This service is intended for use with commonly used clients such as the OpenLayers or Leaflet Javascript libraries, Google Maps, or some GIS software. These libraries allow the GBIF layers to be visualized with other content, such as those coming from web map service (WMS) providers. It should be noted that the mapping API is not a WMS service, nor does it support WFS capabilities.
  - name: Browser usage examples
    description: |
      Examples of how the APIs can be used to build interfaces
      
      # Map examples
      <iframe height="265" style="width:100%; height:500px" scrolling="no" title="Taxon overlay" src="https://codepen.io/hofft/embed/GRROjmo?height=265&theme-id=0&default-tab=js,result" frameborder="no" allowtransparency="true" allowfullscreen="true">
      See the Pen <a href='https://codepen.io/hofft/pen/GRROjmo'>Taxon overlay</a> by Morten Hofft
      (<a href='https://codepen.io/hofft'>@hofft</a>) on <a href='https://codepen.io'>CodePen</a>.
      </iframe>
paths:
  /dataset/search:
    get:
      operationId: datasetSearch
      tags:
        - Dataset
      summary: Dataset search
      description: Full text search across all datasets. Results are ordered by relevance.
      parameters:
      - offset:
        $ref: '#/components/parameters/offsetParam'
      - limit:
        $ref: '#/components/parameters/limitParam'
      - q:
        $ref: '#/components/parameters/q'
      - type:
        $ref: '#/components/parameters/datasetType'
      - license:
        $ref: '#/components/parameters/datasetLicense'
      - keyword:
        $ref: '#/components/parameters/keyword'
      - publishingOrg:
        $ref: '#/components/parameters/publishingOrg'
      - hostingOrg:
        $ref: '#/components/parameters/hostingOrg'
      - decade:
        $ref: '#/components/parameters/decade'
      - publishingCountry:
        $ref: '#/components/parameters/publishingCountry'
      - hl:
        $ref: '#/components/parameters/hl'
      - facet:
        $ref: '#/components/parameters/facet'
      - facetMincount:
        $ref: '#/components/parameters/facetMincount'
      - facetMultiselect:
        $ref: '#/components/parameters/facetMultiselect'
      - facetLimit:
        $ref: '#/components/parameters/facetLimit'
      - facetOffset:
        $ref: '#/components/parameters/facetOffset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './dataTypes/schemas/registry/dataset/datasetSearchResult.yaml'
        '400':
          description: Bad request
      servers:
      - url: http://api.gbif.org
    servers:
    - url: http://api.gbif.org
  /dataset:
    get:
      operationId: datasetList
      tags:
        - Dataset
      summary: List datasets
      description: |
        Search and filter across all datasets. 
        
        For most purposes we recommend [dataset search](#operation/datasetSearch) which is faster and richer in functionality, but datasets updated within the last few minutes might not show in the endpoint just yet. This endpoint however is the authority and most up to date. 
      parameters:
      - offset:
        $ref: '#/components/parameters/offsetParam'
      - limit:
        $ref: '#/components/parameters/limitParam'
      - q:
        $ref: '#/components/parameters/q'
      - type:
        $ref: '#/components/parameters/datasetType'
      - country:
        $ref: '#/components/parameters/country'
      - identifier:
        $ref: '#/components/parameters/identifier'
      - identifierType:
        $ref: '#/components/parameters/identifierType'
      - machineTagNamespace:
        $ref: '#/components/parameters/machineTagNamespace'
      - machineTagName:
        $ref: '#/components/parameters/machineTagName'
      - machineTagValue:
        $ref: '#/components/parameters/machineTagValue'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./dataTypes/schemas/registry/dataset/datasetListResult.yaml"
        '400':
          description: Bad request
    post:
      operationId: createDataset
      tags:
        - Dataset
      summary: Creates a new dataset
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./dataTypes/schemas/registry/dataset/dataset_create.yaml"
    put:
      operationId: updateDataset
      tags:
        - Dataset
      summary: Update a dataset
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./dataTypes/schemas/registry/dataset/dataset_update.yaml"
      security:
        - BasicAuth: [write]
        - BearerAuth: [write]
  /dataset/{datasetKey}:
    get:
      operationId: getDataset
      tags:
        - Dataset
      summary: Get dataset by key
      description: Get an individual dataset by its uuid
      parameters:
        - name: datasetKey
          in: path
          description: UUID of dataset to return
          required: true
          schema:
            type: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./dataTypes/schemas/registry/dataset/dataset.yaml"
    delete:
      operationId: deleteDataset
      tags:
        - Dataset
      summary: Deletes a dataset
      description: ''
      parameters:
        - name: datasetKey
          in: path
          description: Key of dataset to delete
          required: true
          schema:
            type: uuid
      responses:
        '400':
          description: Invalid dataset key
      security:
        - BasicAuth: [write]
        - BearerAuth: [write]
  /dataset/{datasetKey}/contact:
    get:
      operationId: getDatasetContacts
      tags:
        - Dataset
      summary: Get all contacts associated with a dataset
      parameters:
        - name: datasetKey
          in: path
          description: Key of dataset to delete
          required: true
          schema:
            type: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./dataTypes/schemas/registry/contact.yaml"
  /map/occurrence/density/{z}/{x}/{y}{resolution}.{format}:
    get:
      operationId: densityMaps
      tags:
        - Maps
      summary: Density maps
      description: Get high resolution precalculated maps with limited filter options. For arbitrary filters, please use the adhoc maps - the downside of those are that they are slower and have a cruder resolution.
      parameters:
      - z:
        $ref: '#/components/parameters/mapZ'
      - x:
        $ref: '#/components/parameters/mapX'
      - y:
        $ref: '#/components/parameters/mapY'
      - format:
        $ref: '#/components/parameters/mapFormat'
      - srs:
        $ref: '#/components/parameters/mapSrs'
      - bin:
        $ref: '#/components/parameters/mapBin'
      - hexPerTile:
        $ref: '#/components/parameters/mapHexPerTile'
      - squareSize:
        $ref: '#/components/parameters/mapSquaresPerTile'
      - style:
        $ref: '#/components/parameters/mapStyle'
      - name: taxonKey
        in: query
        description: |
          Filter on taxonKey
          This parameter is incompatible with `datasetKey, networkKey, publishingOrg, publishingCountry`.
        required: false
        schema:
          type: integer
      - name: datasetKey
        in: query
        description: |
          Filter on datasetKey
          This parameter is incompatible with `taxonKey, networkKey, publishingOrg, publishingCountry`.
        required: false
        schema:
          type: uuid
      - name: networkKey
        in: query
        description: |
          Filter on networkKey
          This parameter is incompatible with `taxonKey, datasetKey, publishingOrg, publishingCountry`.
        required: false
        schema:
          type: uuid
      - name: publishingOrg
        in: query
        description: |
          Filter on publishingOrg
          This parameter is incompatible with `taxonKey, datasetKey, networkKey, publishingCountry`.
        required: false
        schema:
          type: uuid
      - name: publishingCountry
        in: query
        required: false
        schema:
          type: string
          minLength: 2
          maxLength: 2
        description: |
          Filters by the owining organization's country given as a ISO 639-1 (2 letter) country code. Country codes are listed in our [Country enum](http://api.gbif.org/v1/enumeration/country).
          This parameter is incompatible with `taxonKey, datasetKey, networkKey, publishingOrg`.
      - country:
        $ref: '#/components/parameters/country'
      - name: year
        in: query
        description: Limits the occurrences within a range of years, for example `2000,2010`. Or simply `1990` or `1990,*`
        required: false
        schema:
          type: string
      - name: basisOfRecord
        in: query
        description: Can be given multiple times to include records with that basis of record
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum: [OBSERVATION, HUMAN_OBSERVATION, MACHINE_OBSERVATION, MATERIAL_SAMPLE, PRESERVED_SPECIMEN, FOSSIL_SPECIMEN, LIVING_SPECIMEN, LITERATURE, UNKNOWN]
      responses:
        '200':
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: binary
            application/x-protobuf:
              schema:
                type: string
                format: binary
              examples:
                sampleFile:
                  summary: A sample file
                  externalValue: 'https://api.gbif.org/v2/map/occurrence/density/1/0/1.mvt?srs=EPSG:3857&taxonKey=2440033'
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
  parameters:
    mapSrs:
      name: srs
      in: query
      description: |
        Spatial reference system. One of:
          * EPSG:3857 (Web Mercator)
          * EPSG:4326 (WGS84 plate careÃ©)
          * EPSG:3575 (Arctic LAEA)
          * EPSG:3031 (Antarctic stereographic)

        The projection declares how coordinates on Earth are transformed to a two dimensional surface.
        The tile schema defines how that two dimensional surface is split into smaller square images, and how those images are addressed.
        Four projections are available for density tiles. Only the second, WGS84, is available for Ad-hoc tiles.
        
        Information on the projections is on the [GBIF base map tiles](https://tile.gbif.org/ui/) page.
      required: true
      schema:
        type: string
        enum: ['EPSG:3857', 'EPSG:4326', 'EPSG:3575', 'EPSG:3031']
    mapBin:
      name: bin
      in: query
      description: |
        `square` or `hex` to aggregate occurrence counts into squares or hexagons. Points by default. TODO what to parse if I want points (aside from not filling it)
      required: false
      schema:
        type: string
        enum: ['', 'square', 'hex']
    mapHexPerTile:
      name: hexPerTile
      in: query
      description: Sets the size of the hexagons (the number horizontally across a tile). Only applies for `bin=hex`
      required: false
      schema:
        type: string
    mapSquaresPerTile:
      name: squareSize
      in: query
      description: Sets the size of the squares. Choose a factor of 4096 so they tessalate correctly
      required: false
      schema:
        type: integer
        enum: [8, 16, 32, 64, 128, 256, 512]
    mapStyle:
      name: style
      in: query
      description: |
        Only applies to raster tiles (PNG). Choose from the available styles. Defaults to classic.point. 
        
        Styles ending with `.point` should only be used by point binning. And styles ending with `.poly` or `.marker` should be used when binning by `hex` or `square`.
        <div class="mapThumbnails">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?style=purpleHeat.point&srs=EPSG:4326&taxonKey=797" title="purpleHeat.point">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?style=blueHeat.point&srs=EPSG:4326&taxonKey=797" title="blueHeat.point">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?style=orangeHeat.point&srs=EPSG:4326&taxonKey=797" title="orangeHeat.point">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?style=greenHeat.point&srs=EPSG:4326&taxonKey=797" title="greenHeat.point">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?style=classic.point&srs=EPSG:4326&taxonKey=797" title="classic.point">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?style=purpleYellow.point&srs=EPSG:4326&taxonKey=797" title="purpleYellow.point">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?style=fire.point&srs=EPSG:4326&taxonKey=797" title="fire.point">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?style=glacier.point&srs=EPSG:4326&taxonKey=797" title="glacier.point">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?bin=hex&hexPerTile=20&style=classic.poly&srs=EPSG:4326&taxonKey=797" title="classic.poly">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?bin=hex&hexPerTile=20&style=classic-noborder.poly&srs=EPSG:4326&taxonKey=797" title="classic-noborder.poly">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?bin=hex&hexPerTile=20&style=purpleYellow.poly&srs=EPSG:4326&taxonKey=797" title="purpleYellow.poly">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?bin=hex&hexPerTile=20&style=purpleYellow-noborder.poly&srs=EPSG:4326&taxonKey=797" title="purpleYellow-noborder.poly">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?bin=hex&hexPerTile=20&style=green.poly&srs=EPSG:4326&taxonKey=797" title="green.poly">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?bin=hex&hexPerTile=20&style=green2.poly&srs=EPSG:4326&taxonKey=797" title="green2.poly">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?bin=hex&hexPerTile=20&style=iNaturalist.poly&srs=EPSG:4326&taxonKey=797" title="iNaturalist.poly">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?bin=hex&hexPerTile=20&style=purpleWhite.poly&srs=EPSG:4326&taxonKey=797" title="purpleWhite.poly">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?bin=hex&hexPerTile=20&style=red.poly&srs=EPSG:4326&taxonKey=797" title="red.poly">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?bin=hex&hexPerTile=20&style=blue.marker&srs=EPSG:4326&taxonKey=797" title="blue.marker">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?bin=hex&hexPerTile=20&style=orange.marker&srs=EPSG:4326&taxonKey=797" title="orange.marker">
          <img class="mapThumbnail" src="https://api.gbif.org/v2/map/occurrence/density/0/0/0@Hx.png?bin=hex&hexPerTile=20&style=outline.poly&srs=EPSG:4326&taxonKey=797" title="outline.poly">
        </div>
      required: false
      schema:
        type: integer
        enum: ['purpleHeat.point', 'blueHeat.point', 'orangeHeat.point', 'greenHeat.point', 'classic.point', 'purpleYellow.point', 'fire.point', 'glacier.point', 'classic.poly', 'classic-noborder.poly', 'purpleYellow.poly', 'purpleYellow-noborder.poly', 'green.poly', 'green2.poly', 'iNaturalist.poly', 'purpleWhite.poly', 'red.poly', 'blue.marker', 'orange.marker', 'outline.poly']
    mapZ:
      name: z
      in: path
      description: zoom
      required: true
      schema:
        type: integer
    mapX:
      name: x
      in: path
      description: column
      required: true
      schema:
        type: integer
    mapY:
      name: y
      in: path
      description: row
      required: true
      schema:
        type: integer
    mapFormat:
      name: format
      in: path
      description: |
        What resolution and format to get the image in

        Options:
        * `.mvt` for a vector tile
        * `@Hx.png` for a 256px raster tile (for legacy clients)
        * `@1x.png` for a 512px raster tile
        * `@2x.png` for a 1024px raster tile
        * `@3x.png` for a 2048px raster tile
        * `@4x.png` for a 4096px raster tile
        
        The larger raster tiles are intended for high resolution displays, e.g. 4K displays and many mobile phones.
      required: true
      schema:
        type: string
        enum: ['.mvt', '@Hx.png', '@1x.png', '@2x.png', '@3x.png', '@4x.png']
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
      description: The number of items to skip before starting to collect the result set.
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 1000
        default: 20
      description: The numbers of items to return.
    q:
      in: query
      name: q
      required: false
      schema:
        type: string
      description: Search for text resembling the given text
    datasetType:
      in: query
      name: type
      required: false
      style: form
      explode: true
      description: Filters by dataset type as given in our DatasetType enum http://api.gbif.org/v1/enumeration/basic/DatasetType.
      schema:
        type: string
        # enum: [OCCURRENCE, METADATA, CHECKLIST, SAMPLING_EVENT]
      example: OCCURRENCE
    country:
      in: query
      name: country
      required: false
      style: form
      explode: true
      schema:
        type: string
        minLength: 2
        maxLength: 2
      description: Filters by country given as a ISO 639-1 (2 letter) country code. Country codes are listed in our [Country enum](http://api.gbif.org/v1/enumeration/country). TODO what does this actually filter on?
    identifier:
      in: query
      name: identifier
      required: false
      schema:
        type: string
      description: The value for this parameter can be a simple string or integer, e.g. identifier=120
    identifierType:
      in: query
      name: identifierType
      required: false
      schema:
        type: string
      description: Used in combination with the identifier parameter to filter identifiers by identifier type as given in our [IdentifierType enum](http://api.gbif.org/v1/enumeration/basic/IdentifierType)
    machineTagValue:
      in: query
      name: machineTagValue
      required: false
      schema:
        type: string
      description: Filters for entities with a machine tag with the specified value (use in combination with the machineTagNamespace and machineTagName parameters).
    machineTagName:
      in: query
      name: machineTagName
      required: false
      schema:
        type: string
      description: Filters for entities with a machine tag with the specified name (use in combination with the machineTagNamespace parameter).
    machineTagNamespace:
      in: query
      name: machineTagNamespace
      required: false
      schema:
        type: string
      description: Filters for entities with a machine tag in the specified namespace.
    datasetLicense:
      in: query
      name: license
      required: false
      schema:
        type: string
      description: The type of license applied to the dataset. The possible types are listed in the [license enum](http://api.gbif.org/v1/enumeration/basic/License)
    keyword:
      in: query
      name: keyword
      required: false
      schema:
        type: string
      description: Filters datasets by a case insensitive plain text keyword. The search is done on the merged collection of tags, the dataset keywordCollections and temporalCoverages.
    publishingOrg:
      in: query
      name: publishingOrg
      required: false
      schema:
        type: uuid
      description: Filters by publishing organization UUID key
    hostingOrg:
      in: query
      name: hostingOrg
      required: false
      schema:
        type: uuid
      description: Filters by hosting organization UUID key
    decade:
      in: query
      name: decade
      required: false
      schema:
        type: integer
      description: Filters datasets by their temporal coverage broken down to decades. Decades are given as a full year, e.g. 1880, 1960, 2000, etc, and will return datasets wholly contained in the decade as well as those that cover the entire decade or more. Facet by decade to get the break down, e.g. /search?facet=DECADE&limit=0
    publishingCountry:
      in: query
      name: publishingCountry
      required: false
      schema:
        type: string
        minLength: 2
        maxLength: 2
      description: Filters by the owining organization's country given as a ISO 639-1 (2 letter) country code. Country codes are listed in our [Country enum](http://api.gbif.org/v1/enumeration/country).
    continent:
      in: query
      name: continent
      required: false
      schema:
        type: string
      description: Not yet implemented, but will eventually allow filtering datasets by their continent(s) as given in our [Continent enum](http://api.gbif.org/v1/enumeration/Continent).
    hl:
      in: query
      name: hl
      required: false
      schema:
        type: boolean
      description: "Set `hl=true` to highlight terms matching the query when in fulltext search fields. The highlight will be an emphasis tag of class `gbifH1` e.g. `/search?q=plant&hl=true`. Fulltext search fields include: title, keyword, country, publishing country, publishing organization title, hosting organization title, and description. One additional full text field is searched which includes information from metadata documents, but the text of this field is not returned in the response."
      example: true
    facet:
      in: query
      name: facet
      required: false
      schema:
        type: string
        enum: 
          - type
          - keyword
          - publishingOrg
          - hostingOrg
          - decade
          - publishingCountry
      description: "A list of facet names used to retrieve the 10 most frequent values for a field."
      example: type
    facetMincount:
      in: query
      name: facetMincount
      required: false
      schema:
        type: integer
        minimum: 0
      description: "Used in combination with the facet parameter. Set `facetMincount={#}` to exclude facets with a count less than `{#}`, e.g. `/search?facet=type&limit=0&facetMincount=10000` only shows the type value `OCCURRENCE` because `CHECKLIST` and `METADATA` have counts less than 10000."
      example: 10000
    facetMultiselect:
      in: query
      name: facetMultiselect
      required: false
      schema:
        type: boolean
      description: "Used in combination with the facet parameter. Set `facetMultiselect=true` to still return counts for values that are not currently filtered, e.g. `/search?facet=type&limit=0&type=CHECKLIST&facetMultiselect=true` still shows type values `OCCURRENCE` and `METADATA` even though type is being filtered by `type=CHECKLIST`"
      example: true
    facetLimit:
      in: query
      name: facetLimit
      required: false
      schema:
        type: integer
        minimum: 0
      description: "The amount of facet results to be returned to be returned. It is possible to have individual limits for facets by prepending the facet name. e.g. `type.facetLimit`"
    facetOffset:
      in: query
      name: facetOffset
      required: false
      schema:
        type: integer
        minimum: 0
      description: The number of items to skip before starting to collect the facet result set. It is possible to have individual offset for facets by prepending the facet name. e.g. `type.facetOffset`